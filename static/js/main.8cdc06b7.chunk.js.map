{"version":3,"sources":["Component/Navbar/Navbar.module.css","Component/Navbar/Navbar.tsx","Component/Music/Music.tsx","Component/News/News.tsx","Component/Setting/Setting.tsx","Redux/appReducer.ts","Component/Header/Header.tsx","Component/Header/HeaderContainer.tsx","App.tsx","Redux/reduxStore.ts","index.tsx","Redux/authReducer.ts","Component/Header/Header.module.css","assets/images/Spinner.svg","Component/common/Preloader/Preloader.tsx","assets/images/userIcon.png","Redux/profileReducer.ts","Redux/dialogsReducer.ts","utils/objectHelpers.ts","Redux/usersReducer.ts","API/api.ts"],"names":["module","exports","Navbar","setActive","isActive","s","activeLink","item","className","nav","to","Music","props","name","News","Setting","initialState","initialized","Header","login","isAuth","logoutTC","header","src","alt","loginBlock","onClick","userPhoto","HeaderContainer","this","React","Component","connect","state","auth","Login","lazy","UsersContainer","DialogsContainer","ProfileContainer","App","promiseRejectionEvent","console","log","initializeAppTC","window","addEventListener","catchAllUnhandledErrors","removeEventListener","Suspense","fallback","path","element","Preloader","compose","app","dispatch","a","getAuthMeTC","type","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","authReducer","form","formReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","id","email","captchaUrl","payload","captcha","setAuthUserDataAC","authAPI","authMe","res","resultCode","data","loginTC","getCaptchaUrlTC","message","messages","length","stopSubmit","_error","logout","securityAPI","getCaptchaUrl","url","preload","postsData","likesCount","profile","status","body","newPostBody","filter","post","photos","addPostAC","setStatusAC","getUserProfileTC","userId","profileAPI","getProfile","getStatusTC","getStatus","updateStatusTC","updateStatus","savePhotoTC","file","savePhoto","saveProfileTC","getState","saveProfile","Promise","reject","dialogsData","massagesData","newMessageBody","AddMessageAC","updateObjectInArray","items","itemId","obgPropName","newObjProps","map","m","users","pageSize","totalUsersCount","currentPages","isFetching","followingInProgress","followed","totalCount","followSuccessAC","userID","unfollowSuccessAC","toggleIsFetchingAC","toggleIsFollowingProgressAC","requestUsersTC","page","usersAPI","getUsers","followUnfollowFlow","apiMethod","actionCreator","followTC","followUser","bind","unfollowTC","unfollowUser","instance","axios","create","baseURL","withCredentials","headers","currentNumberPages","get","then","response","delete","put","formData","FormData","append"],"mappings":"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","file":"static/js/main.8cdc06b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__cUqkZ\",\"activeLink\":\"Navbar_activeLink__3dZSJ\",\"item\":\"Navbar_item__3QqFY\"};","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    const setActive = ({isActive}: { isActive: boolean }) => isActive ? s.activeLink : s.item\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/profile'}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/dialogs'}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/users'}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/news'}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/music'}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/setting'}>Setting</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}","import React from 'react';\r\n\r\ntype MusicPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const Music = (props: MusicPropsType) => {\r\n    return (\r\n        <div>{props.name}</div>\r\n    )\r\n}","import React from 'react';\r\n\r\ntype NewsPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const News = (props: NewsPropsType) => {\r\n    return (\r\n        <div>{props.name}</div>\r\n    )\r\n}","import React from 'react';\r\n\r\ntype SettingPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const Setting = (props: SettingPropsType) => {\r\n    return (\r\n        <div>{props.name}</div>\r\n    )\r\n}","import {AppThunk} from './reduxStore';\r\nimport {getAuthMeTC} from './authReducer';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type initialStateProfileType = {\r\n    initialized: boolean\r\n}\r\n\r\nexport const appReducer = (state: initialStateProfileType = initialState, action: AppReducerType): initialStateProfileType => {\r\n    switch (action.type) {\r\n        case 'app/INITIALIZED-SUCCESS': {\r\n            return {...state, initialized: true}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type AppReducerType = InitializedSuccessACType\r\n\r\ntype InitializedSuccessACType = ReturnType<typeof initializedSuccessAC>\r\nexport const initializedSuccessAC = () => {\r\n    return {type: 'app/INITIALIZED-SUCCESS'} as const\r\n}\r\n\r\nexport const initializeAppTC = (): AppThunk => async (dispatch) => {\r\n    await dispatch(getAuthMeTC())\r\n    dispatch(initializedSuccessAC())\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport userPhoto from '../../assets/images/userIcon.png';\r\n\r\ntype HeaderPropsType = {\r\n    login: null | string\r\n    isAuth: boolean\r\n    logoutTC: Function\r\n}\r\n\r\nexport const Header = ({login, isAuth, logoutTC,}: HeaderPropsType) => {\r\n\r\n    const onClickHandler = () => {\r\n        logoutTC()\r\n    }\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://www.logodesign.net/logo/abstract-cuboid-building-4519ld.png\" alt=\"logo\"/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth\r\n                    ? <div>{login} - <button onClick={onClickHandler}>Log out</button></div>\r\n                    : <NavLink to={'/login'}><img src={userPhoto} alt=\"123\"/>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Header} from './Header';\r\nimport {logoutTC} from '../../Redux/authReducer';\r\nimport {AppStateType} from '../../Redux/reduxStore';\r\n\r\ntype HeaderContainerType = MapStateToPropsType & MapDispatchToProps\r\n\r\ntype MapStateToPropsType = {\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToProps = {\r\n    logoutTC: Function\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, AppStateType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header  {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutTC})\r\n(HeaderContainer)","import React from 'react';\r\nimport './App.css';\r\nimport {Navbar} from './Component/Navbar/Navbar';\r\nimport {Route, Routes,} from 'react-router';\r\nimport {Music} from './Component/Music/Music';\r\nimport {News} from './Component/News/News';\r\nimport {Setting} from './Component/Setting/Setting';\r\nimport {AppStateType} from './Redux/reduxStore';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeAppTC} from './Redux/appReducer';\r\nimport {Preloader} from './Component/common/Preloader/Preloader';\r\nimport HeaderContainer from './Component/Header/HeaderContainer';\r\n\r\nconst Login = React.lazy(() => import('./Component/Login/Login'));\r\nconst UsersContainer = React.lazy(() => import('./Component/Users/UsersContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./Component/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./Component/Profile/ProfileInfo/ProfileContainer'));\r\n\r\n\r\ntype AppConnectType = MapDispatchToProps & MapStateToProps\r\ntype MapStateToProps = {\r\n    initialized: boolean\r\n}\r\ntype MapDispatchToProps = {\r\n    initializeAppTC: () => any\r\n}\r\n\r\nclass App extends React.Component <AppConnectType, AppStateType> {\r\n    catchAllUnhandledErrors(promiseRejectionEvent: PromiseRejectionEvent) {\r\n        console.log('Some error occurred', promiseRejectionEvent)\r\n    }\r\n    componentDidMount() {\r\n        this.props.initializeAppTC()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className={'app-wrapper'}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={'app-wrapper-content'}>\r\n                    <React.Suspense fallback={<div>Loading...</div>}>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<ProfileContainer/>}/>\r\n                            <Route path=\"/profile\" element={<ProfileContainer/>}>\r\n                                <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                            </Route>\r\n                            <Route path=\"/dialogs\" element={<DialogsContainer/>}/>\r\n                            <Route path=\"/users\" element={<UsersContainer/>}/>\r\n                            <Route path=\"/news\" element={<News name={'News'}/>}/>\r\n                            <Route path=\"/music\" element={<Music name={'Music'}/>}/>\r\n                            <Route path=\"/setting\" element={<Setting name={'Setting'}/>}/>\r\n                            <Route path=\"/login\" element={<Login/>}/>\r\n                            <Route path=\"*\" element={<div>404 NOT FOUND</div>}/>\r\n                        </Routes>\r\n                    </React.Suspense>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {initializeAppTC})(App)\r\n)\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {ACDialogsReducerType, dialogsReducer} from './dialogsReducer';\r\nimport {ACProfileReducerType, profileReducer} from './profileReducer';\r\nimport {ACUsersReducerType, usersReducer,} from './usersReducer';\r\nimport {authReducer, AuthReducerType} from './authReducer';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer, AppReducerType} from './appReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n//export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppActionType =\r\n    | ACProfileReducerType\r\n    | ACDialogsReducerType\r\n    | ACUsersReducerType\r\n    | AuthReducerType\r\n    | AppReducerType\r\n\r\nexport type AppThunk<ReturnType = void> =\r\n    ThunkAction<ReturnType, AppStateType, unknown, AppActionType>\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './Redux/reduxStore';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n)\r\n\r\n","import {authAPI, LoginParamsType, securityAPI} from '../API/api';\r\nimport {Dispatch} from 'redux';\r\nimport {AppThunk} from './reduxStore';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nexport type initialStateAuthType = {\r\n    id: null | number\r\n    login: null | string\r\n    email: null | string\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\nexport const authReducer = (state: initialStateAuthType = initialState, action: AuthReducerType): initialStateAuthType => {\r\n    switch (action.type) {\r\n        case 'auth/SET-USER-DATA': {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case 'auth/SET-IS-AUTH': {\r\n            return {...state, isAuth: action.isAuth}\r\n        }\r\n        case 'auth/SET-CAPTCHA-URL-SUCCESS': {\r\n            return {...state, captchaUrl: action.captcha}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type AuthReducerType = SetAuthUserDataACType | SetIsAuth | GetCaptchaUrlSuccess\r\n\r\ntype SetAuthUserDataACType = ReturnType<typeof setAuthUserDataAC>\r\nexport const setAuthUserDataAC = (id: number | null, login: string | null, email: string | null, isAuth: boolean, captchaUrl: string | null) => {\r\n    return {type: 'auth/SET-USER-DATA', payload: {id, login, email, isAuth, captchaUrl}} as const\r\n}\r\n\r\ntype SetIsAuth = ReturnType<typeof setIsAuthAC>\r\nexport const setIsAuthAC = (isAuth: boolean) => {\r\n    return {type: 'auth/SET-IS-AUTH', isAuth} as const\r\n}\r\n\r\ntype GetCaptchaUrlSuccess = ReturnType<typeof getCaptchaUrlSuccess>\r\nexport const getCaptchaUrlSuccess = (captcha: string) => {\r\n    return {type: 'auth/SET-CAPTCHA-URL-SUCCESS', captcha} as const\r\n}\r\n\r\nexport const getAuthMeTC = () => async (dispatch: Dispatch) => {\r\n    const res = await authAPI.authMe()\r\n\r\n    if (res.resultCode === 0) {\r\n        let {id, login, email} = res.data\r\n        dispatch(setAuthUserDataAC(id, login, email, true, null))\r\n    }\r\n}\r\n\r\nexport const loginTC = (data: LoginParamsType): AppThunk => async (dispatch) => {\r\n    const res = await authAPI.login(data)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        await dispatch(getAuthMeTC())\r\n    } else {\r\n        if (res.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrlTC())\r\n        }\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Email or login is wrong'\r\n        let action: any = stopSubmit('login', {_error: message})\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): AppThunk => async (dispatch) => {\r\n    const res = await authAPI.logout()\r\n\r\n    if (res.data.resultCode === 0) {\r\n        await dispatch(getAuthMeTC())\r\n        dispatch(setAuthUserDataAC(null, null, null, false, null))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrlTC = (): AppThunk => async (dispatch) => {\r\n    const res = await securityAPI.getCaptchaUrl()\r\n    dispatch(getCaptchaUrlSuccess(res.data.url))\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__QlxvU\",\"loginBlock\":\"Header_loginBlock__3MxXM\"};","export default __webpack_public_path__ + \"static/media/Spinner.ac5d5761.svg\";","import React from 'react';\r\nimport preload from '../../../assets/images/Spinner.svg';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <>\r\n            <img src={preload} alt={'pic'}/>\r\n        </>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/userIcon.01df14ab.png\";","import {profileAPI} from '../API/api';\r\nimport {AppStateType, AppThunk} from './reduxStore';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    'aboutMe': string\r\n    'contacts': {\r\n        'facebook': string,\r\n        'website': string,\r\n        'vk': string,\r\n        'twitter': string,\r\n        'instagram': string,\r\n        'youtube': string,\r\n        'github': string,\r\n        'mainLink': string\r\n    }\r\n    'lookingForAJob': string\r\n    'lookingForAJobDescription': string\r\n    'fullName': string\r\n    'userId': string\r\n    'photos': {\r\n        'small': string\r\n        'large': string\r\n    }\r\n}\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 15},\r\n        {id: 2, message: 'My first post!', likesCount: 20},\r\n    ],\r\n    profile: null as unknown as ProfileType,\r\n    status: '',\r\n}\r\nexport type InitialStateProfileType = {\r\n    postsData: Array<PostType>\r\n    profile: ProfileType\r\n    status: string\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateProfileType = initialState, action: ACProfileReducerType) => {\r\n    switch (action.type) {\r\n        case 'profile/ADD-POST': {\r\n            const body = action.newPostBody\r\n            return {...state, postsData: [...state.postsData, {id: 5, message: body, likesCount: 0}]}\r\n        }\r\n        case 'profile/SET-USER-PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'profile/SET-STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'profile/DELETE-POST': {\r\n            return {...state, postsData: state.postsData.filter(post => post.id !== action.id)}\r\n        }\r\n        case 'profile/SAVE-PHOTO-SUCCESS': {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ACProfileReducerType =\r\n    | AddPostACType\r\n    | SetUserProfileACType\r\n    | SetStatusACType\r\n    | DeletePostACType\r\n    | SavePhotoSuccessACACType\r\n\r\n\r\ntype AddPostACType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = (newPostBody: string) => {\r\n    return {type: 'profile/ADD-POST', newPostBody} as const\r\n}\r\ntype SetUserProfileACType = ReturnType<typeof setUserProfileAC>\r\nexport const setUserProfileAC = (profile: ProfileType) => {\r\n    return {type: 'profile/SET-USER-PROFILE', profile} as const\r\n}\r\ntype SetStatusACType = ReturnType<typeof setStatusAC>\r\nexport const setStatusAC = (status: string) => {\r\n    return {type: 'profile/SET-STATUS', status} as const\r\n}\r\ntype DeletePostACType = ReturnType<typeof deletePostAC>\r\nexport const deletePostAC = (id: number) => {\r\n    return {type: 'profile/DELETE-POST', id} as const\r\n}\r\ntype SavePhotoSuccessACACType = ReturnType<typeof savePhotoSuccessAC>\r\nexport const savePhotoSuccessAC = (photos: { small: string, large: string }) => {\r\n    return {type: 'profile/SAVE-PHOTO-SUCCESS', photos} as const\r\n}\r\n\r\nexport const getUserProfileTC = (userId: string): AppThunk => async (dispatch) => {\r\n    const res = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileAC(res.data))\r\n}\r\n\r\nexport const getStatusTC = (status: string): AppThunk => async (dispatch) => {\r\n    const res = await profileAPI.getStatus(status)\r\n    dispatch(setStatusAC(res.data))\r\n}\r\n\r\nexport const updateStatusTC = (status: string): AppThunk => async (dispatch) => {\r\n    const res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatusAC(status))\r\n    }\r\n}\r\nexport const savePhotoTC = (file: File): AppThunk => async (dispatch) => {\r\n    const res = await profileAPI.savePhoto(file)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccessAC(res.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfileTC = (profile: ProfileType): AppThunk => async (dispatch, getState: () => AppStateType) => {\r\n    const state = getState()\r\n    const res = await profileAPI.saveProfile(profile)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getUserProfileTC(state.profilePage.profile.userId))\r\n    } else {\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Field is wrong'\r\n        dispatch(stopSubmit('edit-profile', {_error: message}))\r\n        return Promise.reject(res.data.messages[0])\r\n    }\r\n}\r\n\r\n\r\n\r\n","export type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Egor'},\r\n        {id: 2, name: 'Marina'},\r\n        {id: 3, name: 'Veronika'},\r\n        {id: 4, name: 'Andrey'},\r\n        {id: 5, name: 'Igor'},\r\n        {id: 6, name: 'Artem'},\r\n    ] as Array<DialogsType>,\r\n    massagesData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateDialogsType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateDialogsType = initialState, action: ACDialogsReducerType):InitialStateDialogsType => {\r\n    switch (action.type) {\r\n        case 'dialogs/ADD-MESSAGE': {\r\n            const body = action.newMessageBody\r\n            return {...state, massagesData: [...state.massagesData, {id:6, message:body}] }\r\n         }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ACDialogsReducerType = AddMessageACType\r\n\r\ntype AddMessageACType = ReturnType<typeof AddMessageAC>\r\nexport const AddMessageAC = (newMessageBody: string) => {\r\n    return {type: 'dialogs/ADD-MESSAGE', newMessageBody} as const\r\n}\r\n","export const updateObjectInArray = (items: any[], itemId: string | number, obgPropName: string, newObjProps: Object) => {\r\n   return  items.map(m => m[obgPropName] === itemId ? {...m, ...newObjProps} : m)\r\n}\r\n\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {usersAPI} from '../API/api';\r\nimport {updateObjectInArray} from '../utils/objectHelpers';\r\n\r\ntype PhotosType = {\r\n    small: string | undefined\r\n    large: string | undefined\r\n}\r\ntype LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\n\r\nexport type UserType = {\r\n    photos: PhotosType\r\n    name: string;\r\n    id: number\r\n    followed: boolean\r\n    location: LocationType\r\n    status: string\r\n}\r\n\r\n\r\nexport type initialStateUserType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state: initialStateUserType = initialState, action: ACUsersReducerType): initialStateUserType => {\r\n    switch (action.type) {\r\n        case 'users/FOLLOW-SUCCESS':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, 'id', {followed: true})\r\n            }\r\n        case 'users/UNFOLLOW-SUCCESS':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, 'id', {followed: false})\r\n            }\r\n        case 'users/SET-USER':\r\n            return {...state, users: [...action.users]}\r\n        case 'users/SET-CURRENT-PAGE':\r\n            return {...state, currentPages: action.currentPages}\r\n        case 'users/SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case 'users/TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'users/TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ACUsersReducerType = FollowSuccessACType | UnfollowSuccessACType | SetUserACType\r\n    | SetCurrentPageACType | SetTotalUsersCountACType | ToggleIsFetchingACType\r\n    | ToggleIsFollowingProgressACType\r\n\r\ntype FollowSuccessACType = ReturnType<typeof followSuccessAC>\r\nexport const followSuccessAC = (userID: number) => {\r\n    return {type: 'users/FOLLOW-SUCCESS', id: userID} as const\r\n}\r\n\r\ntype UnfollowSuccessACType = ReturnType<typeof unfollowSuccessAC>\r\nexport const unfollowSuccessAC = (userID: number) => {\r\n    return {type: 'users/UNFOLLOW-SUCCESS', id: userID} as const\r\n}\r\n\r\ntype SetUserACType = ReturnType<typeof setUserAC>\r\nexport const setUserAC = (users: Array<UserType>) => {\r\n    return {type: 'users/SET-USER', users: users} as const\r\n}\r\n\r\ntype SetCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\nexport const setCurrentPageAC = (currentPages: number) => {\r\n    return {type: 'users/SET-CURRENT-PAGE', currentPages} as const\r\n}\r\n\r\ntype SetTotalUsersCountACType = ReturnType<typeof setTotalUsersCountAC>\r\nexport const setTotalUsersCountAC = (totalCount: number) => {\r\n    return {type: 'users/SET-TOTAL-USERS-COUNT', totalCount} as const\r\n}\r\n\r\ntype ToggleIsFetchingACType = ReturnType<typeof toggleIsFetchingAC>\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => {\r\n    return {type: 'users/TOGGLE-IS-FETCHING', isFetching} as const\r\n}\r\n\r\ntype ToggleIsFollowingProgressACType = ReturnType<typeof toggleIsFollowingProgressAC>\r\nexport const toggleIsFollowingProgressAC = (isFetching: boolean, userId: number) => {\r\n    return {type: 'users/TOGGLE-IS-FOLLOWING-PROGRESS', isFetching, userId} as const\r\n}\r\n\r\nexport const requestUsersTC = (page: number, pageSize: number) => async (dispatch: Dispatch<ACUsersReducerType>) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n    dispatch(setCurrentPageAC(page))\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetchingAC(false))\r\n    dispatch(setUserAC(data.items))\r\n    dispatch(setTotalUsersCountAC(data.totalCount))\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: Function, actionCreator: Function) => {\r\n    dispatch(toggleIsFollowingProgressAC(true, userId))\r\n\r\n    const resultCode = await apiMethod(userId)\r\n    if (resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgressAC(false, userId))\r\n}\r\n\r\nexport const followTC = (userId: number) => async (dispatch: Dispatch<ACUsersReducerType>) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccessAC)\r\n}\r\n\r\nexport const unfollowTC = (userId: number) => async (dispatch: Dispatch<ACUsersReducerType>) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccessAC)\r\n\r\n}\r\n\r\n\r\n\r\n","import axios, {AxiosResponse} from 'axios';\r\nimport {ProfileType} from '../Redux/profileReducer';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '066ae431-6115-49fc-b06c-595e5096a36d'\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentNumberPages: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentNumberPages}&count=${pageSize}`)\r\n            .then(response => {\r\n                    return response.data\r\n                } //вернул promise в котором data\r\n            )\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode\r\n            })\r\n    },\r\n    followUser(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<BaseProfileType<AuthMeType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<BaseProfileType<{ userId: number }>>('/auth/login', data)\r\n    },\r\n    logout() {\r\n        return instance.delete<BaseProfileType>('/auth/login')\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<any,AxiosResponse<SecurityType>>(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<BaseProfileType>(`profile/status/`, {status: status})\r\n    },\r\n    savePhoto(file: File) {\r\n        let formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance.put('profile/photo/',formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(data: ProfileType) {\r\n        return instance.put('profile/', data)\r\n    }\r\n\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n    captcha?: string\r\n}\r\n\r\n\r\ntype AuthMeType = {\r\n    email: string\r\n    id: number\r\n    login: string\r\n}\r\ntype BaseProfileType<T = {}> = {\r\n    data: T\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n\r\ntype SecurityType = {\r\n    url: string\r\n}\r\n"],"sourceRoot":""}