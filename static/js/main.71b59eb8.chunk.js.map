{"version":3,"sources":["Redux/dialogsReducer.ts","Component/common/Paginator/Paginator.module.css","Component/Users/Users.module.css","API/api.ts","Component/Navbar/Navbar.module.css","Component/Navbar/Navbar.tsx","Component/Music/Music.tsx","Component/News/News.tsx","Component/Setting/Setting.tsx","Component/Header/Header.tsx","Redux/authReducer.ts","Component/Header/HeaderContainer.tsx","Component/Login/Login.tsx","utils/objectHelpers.ts","Redux/usersReducer.ts","Component/common/Paginator/Paginator.tsx","Component/Users/User.tsx","Component/Users/Users.tsx","Redux/userSelector.ts","Component/Users/UsersContainer.tsx","Redux/appReducer.ts","App.tsx","Redux/reduxStore.ts","index.tsx","Component/common/FormsControls/FormsControls.module.css","assets/images/userIcon.png","Component/common/FormsControls/FormsControls.tsx","assets/images/Spinner.svg","Component/common/Preloader/Preloader.tsx","utils/validators/validators.ts","Component/Header/Header.module.css","Redux/profileReducer.ts"],"names":["initialState","dialogsData","id","name","massagesData","message","dialogsReducer","state","action","type","body","newMessageBody","AddMessageAC","module","exports","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentNumberPages","pageSize","get","then","response","data","unfollowUser","userId","delete","resultCode","followUser","post","authAPI","authMe","login","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","Navbar","setActive","isActive","s","activeLink","item","className","nav","to","Music","props","News","Setting","Header","isAuth","logoutTC","header","src","alt","loginBlock","onClick","userPhoto","email","setAuthUserDataAC","payload","getAuthMeTC","dispatch","a","res","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","validate","required","component","Input","placeholder","formSummaryError","loginTC","messages","length","stopSubmit","_error","formData","updateObjectInArray","items","itemId","obgPropName","newObjProps","map","m","users","totalUsersCount","currentPages","isFetching","followingInProgress","followSuccessAC","userID","unfollowSuccessAC","toggleIsFetchingAC","toggleIsFollowingProgressAC","followUnfollowFlow","apiMethod","actionCreator","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","page","index","style","cursor","selectedPage","User","user","followTC","unfollowTC","photos","small","followed","disabled","some","Users","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPages","getIsFetching","getFollowingInProgress","UsersComponent","pageNumber","requestUsersTC","Preloader","compose","totalCount","bind","initialized","DialogsContainer","lazy","ProfileContainer","App","initializeAppTC","Suspense","fallback","path","element","UsersContainer","app","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById","FormControl","meta","children","hasError","touched","formControl","Textarea","input","child","restProps","preload","value","maxLengthCreator","maxLength","postsData","likesCount","profile","newPostBody","addPostAC","setStatusAC","getUserProfileTC","getStatusTC","updateStatusTC"],"mappings":"iMASMA,EAAe,CACjBC,YAAa,CACT,CAACC,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,YACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,UAElBC,aAAc,CACV,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,4BACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,QAMZC,EAAiB,WAA0G,IAAzGC,EAAwG,uDAAvEP,EAAcQ,EAAyD,uCACnI,OAAQA,EAAOC,MACX,IAAK,sBACD,IAAMC,EAAOF,EAAOG,eACpB,OAAO,2BAAIJ,GAAX,IAAkBH,aAAa,GAAD,mBAAMG,EAAMH,cAAZ,CAA0B,CAACF,GAAG,EAAGG,QAAQK,OAE3E,QACI,OAAOH,IAMNK,EAAe,SAACD,GACzB,MAAO,CAACF,KAAM,sBAAuBE,oB,oBC1CzCE,EAAOC,QAAU,CAAC,aAAe,gCAAgC,WAAa,gC,oBCA9ED,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,4BAA4B,WAAa,4B,gCCD/G,mHAEMC,EAFN,OAEiBC,EAAMC,OAAO,CAC1BC,QAAQ,gDACRC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,SACXC,EAA4BC,GACjC,OAAOT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAuDC,IACzDE,MAAK,SAAAC,GACE,OAAOA,EAASC,SAIhCC,aARoB,SAQPC,GACT,OAAOf,EAASgB,OAAT,iBAA0BD,IAC5BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,KAAKI,eAGjCC,WAdoB,SAcTH,GACP,OAAOf,EAASmB,KAAT,iBAAwBJ,IAC1BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,KAAKI,gBAKxBG,EAAU,CACnBC,OADmB,WAEf,OAAOrB,EAASU,IAAT,WACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BS,MAPmB,SAObT,GACF,OAAOb,EAASmB,KAA0C,cAAeN,IAE7EU,OAVmB,WAWf,OAAOvB,EAASgB,OAAwB,iBAInCQ,EAAa,CACtBC,WADsB,SACXV,GACP,OAAOf,EAASU,IAAI,WAAaK,IAErCW,UAJsB,SAIZX,GACN,OAAOf,EAASU,IAAI,kBAAoBK,IAE5CY,aAPsB,SAOTC,GACT,OAAO5B,EAAS6B,IAAT,kBAAiD,CAACD,OAAQA,O,yCCtDzE9B,EAAOC,QAAU,CAAC,IAAM,oBAAoB,WAAa,2BAA2B,KAAO,uB,sJCG9E+B,EAAS,WAClB,IAAMC,EAAY,SAAC,GAAD,SAAEC,SAAgDC,IAAEC,WAAaD,IAAEE,MAErF,OACI,sBAAKC,UAAWH,IAAEI,IAAlB,UACI,qBAAKD,UAAWH,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,UAAWL,EAAWO,GAAI,WAAnC,uBAEJ,qBAAKF,UAAWH,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,UAAWL,EAAWO,GAAI,WAAnC,wBAEJ,qBAAKF,UAAWH,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,UAAWL,EAAWO,GAAI,SAAnC,qBAEJ,qBAAKF,UAAWH,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,UAAWL,EAAWO,GAAI,QAAnC,oBAEJ,qBAAKF,UAAWH,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,UAAWL,EAAWO,GAAI,SAAnC,qBAEJ,qBAAKF,UAAWH,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,UAAWL,EAAWO,GAAI,WAAnC,2B,OCnBHC,EAAQ,SAACC,GAClB,OACI,8BAAMA,EAAMpD,QCFPqD,EAAO,SAACD,GACjB,OACI,8BAAMA,EAAMpD,QCFPsD,EAAU,SAACF,GACpB,OACI,8BAAMA,EAAMpD,Q,wCCGPuD,EAAS,SAAC,GAAiD,IAAhDrB,EAA+C,EAA/CA,MAAOsB,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,SAMnC,OACI,yBAAQT,UAAWH,IAAEa,OAArB,UACI,qBAAKC,IAAI,sEAAsEC,IAAI,SACnF,qBAAKZ,UAAWH,IAAEgB,WAAlB,SACKL,EACK,gCAAMtB,EAAN,MAAe,wBAAQ4B,QATlB,WACnBL,KAQ6B,wBACf,eAAC,IAAD,CAASP,GAAI,SAAb,UAAuB,qBAAKS,IAAKI,IAAWH,IAAI,QAAhD,iB,wCClBhB/D,EAAe,CACjBE,GAAI,KACJmC,MAAO,KACP8B,MAAO,KACPR,QAAQ,GAyBCS,EAAoB,SAAClE,EAAYmC,EAAe8B,EAAeR,GACxE,MAAO,CAAClD,KAAM,qBAAsB4D,QAAS,CAACnE,KAAImC,QAAO8B,QAAOR,YAQvDW,EAAc,yDAAM,WAAOC,GAAP,uBAAAC,EAAA,sEACXrC,IAAQC,SADG,OAGN,KAFjBqC,EADuB,QAGrBzC,aAAmB,EACEyC,EAAI7C,KAAxB1B,EADiB,EACjBA,GAAImC,EADa,EACbA,MAAO8B,EADM,EACNA,MAChBI,EAASH,EAAkBlE,EAAImC,EAAO8B,GAAO,KALpB,2CAAN,uDC3BrBO,E,4JAEF,WACI,OACI,cAAC,EAAD,eAAaC,KAAKpB,Y,GAJAqB,IAAMC,WAgBrBC,eAPO,SAACvE,GACnB,MAAO,CACHoD,OAAQpD,EAAMwE,KAAKpB,OACnBtB,MAAO9B,EAAMwE,KAAK1C,SAIc,CAACuB,SDgCjB,yDAAgB,WAAOW,GAAP,SAAAC,EAAA,sEAClBrC,IAAQG,SADU,UAGR,IAHQ,OAG5BV,KAAKI,WAHuB,gCAI1BuC,EAASD,KAJiB,OAKhCC,EAASH,EAAkB,KAAO,KAAO,MAAO,IALhB,2CAAhB,wDChCTU,CACdJ,G,mDCLKM,EAAiBC,YAA2B,CAACC,KAAM,SAAlCD,EAjByC,SAAC1B,GAAW,IACjE4B,EAAuB5B,EAAvB4B,aAAcC,EAAS7B,EAAT6B,MAErB,OACI,uBAAMC,SAAUF,EAAhB,UACI,8BAAK,cAACG,EAAA,EAAD,CAAOC,SAAU,CAACC,KAAWrF,KAAM,QAASsF,UAAWC,IAAOC,YAAa,YAChF,8BAAK,cAACL,EAAA,EAAD,CAAOC,SAAU,CAACC,KAAWrF,KAAM,WAAYsF,UAAWC,IAAOC,YAAa,WACvElF,KAAM,eAClB,gCAAK,cAAC6E,EAAA,EAAD,CAAOnF,KAAM,aAAcsF,UAAWC,IAAOjF,KAAM,aAAxD,iBACC2E,GAAS,qBAAKjC,UAAWH,IAAE4C,iBAAlB,SAAqCR,IAC/C,8BACI,wBAAQ3E,KAAM,SAAd,2BA2BDqE,eAJS,SAACvE,GAAD,MAA0B,CAC9CoD,OAAQpD,EAAMwE,KAAKpB,UAGiB,CAACkC,QFGlB,SAACjE,GAAD,8CAAqC,WAAO2C,GAAP,mBAAAC,EAAA,sEACtCrC,IAAQE,MAAMT,GADwB,UAG5B,KAFtB6C,EADkD,QAGhD7C,KAAKI,WAH2C,gCAI9CuC,EAASD,KAJqC,8BAMhDjE,EAAUoE,EAAI7C,KAAKkE,SAASC,OAAS,EAAItB,EAAI7C,KAAKkE,SAAS,GAAK,0BAChEtF,EAAcwF,YAAW,QAAS,CAACC,OAAQ5F,IAC/CkE,EAAS/D,GAR2C,4CAArC,wDEHRsE,EAnBD,SAAC,GAA2C,IAA1Ce,EAAyC,EAAzCA,QAMZ,OANqD,EAAjClC,OAOT,cAAC,IAAD,CAAUN,GAAI,aAElB,gCACH,uCACA,cAAC2B,EAAD,CAAgBK,SATH,SAACa,GACdL,EAAQK,Y,QCjCHC,EAAsB,SAACC,EAAcC,EAAyBC,EAAqBC,GAC7F,OAAQH,EAAMI,KAAI,SAAAC,GAAC,OAAIA,EAAEH,KAAiBD,EAAnB,2BAAgCI,GAAMF,GAAeE,MC8BzEzG,EAAe,CACjB0G,MAAO,GACPlF,SAAU,GACVmF,gBAAiB,EACjBC,aAAc,EACdC,YAAY,EACZC,oBAAqB,IAsCZC,EAAkB,SAACC,GAC5B,MAAO,CAACvG,KAAM,uBAAwBP,GAAI8G,IAIjCC,EAAoB,SAACD,GAC9B,MAAO,CAACvG,KAAM,yBAA0BP,GAAI8G,IAmBnCE,EAAqB,SAACL,GAC/B,MAAO,CAACpG,KAAM,2BAA4BoG,eAIjCM,EAA8B,SAACN,EAAqB/E,GAC7D,MAAO,CAACrB,KAAM,qCAAsCoG,aAAY/E,WAavDsF,EAAkB,uCAAG,WAAO7C,EAAezC,EAAgBuF,EAAqBC,GAA3D,SAAA9C,EAAA,6DAC9BD,EAAS4C,GAA4B,EAAMrF,IADb,SAGLuF,EAAUvF,GAHL,OAIX,IAJW,QAK1ByC,EAAS+C,EAAcxF,IAE3ByC,EAAS4C,GAA4B,EAAOrF,IAPd,2CAAH,4D,2BC5GlByF,GAAY,SAAC,GAUtB,IAJiD,IALvBC,EAKsB,EALtBA,gBACAhG,EAIsB,EAJtBA,SACAoF,EAGsB,EAHtBA,aACAa,EAEsB,EAFtBA,cACAC,EACsB,EADtBA,YAGtBC,EAAaC,KAAKC,KAAKL,EAAkBhG,GACzCsG,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAME,EAAeL,KAAKC,KAAKF,EAAaD,GARI,EASNQ,mBAAS,GATH,mBASzCC,EATyC,KAS1BC,EAT0B,KAU1CC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE/C,OAAO,gCAECS,EAAgB,GAChB,wBAAQlE,QAAS,kBAAMmE,EAAiBD,EAAgB,IAAxD,eAGHL,EACIS,QAAO,SAACC,GAAD,OAAUA,GAAQH,GAAyBG,GAAQF,KAC1D9B,KAAI,SAACgC,EAAMC,GACR,OAAO,uBAAMC,MAAO,CAACC,OAAQ,WAEhB1E,QAAS,WACLwD,EAAce,IAElBrF,UAAWyD,IAAiB4B,EAAOxF,KAAE4F,aAAe,GAL1D,cAKgEJ,IAJrDC,MAStBR,EAAeE,GACf,wBAAQlE,QAAS,kBAAMmE,EAAiBD,EAAgB,IAAxD,mB,qBCpCCU,GAAO,SAAC,GAAuE,IAAtEC,EAAqE,EAArEA,KAAMhC,EAA+D,EAA/DA,oBAAqBiC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,WACvD,OACI,gCACQ,iCACI,8BACK,cAAC,IAAD,CAAS3F,GAAI,YAAcyF,EAAK5I,GAAhC,SACG,qBAAK4D,IAA2B,OAAtBgF,EAAKG,OAAOC,MAAiBJ,EAAKG,OAAOC,MAAQhF,IACtDf,UAAWH,KAAEkB,UAAWH,IAAK,YAG1C,8BACK+E,EAAKK,SACA,wBAAQC,SAAUtC,EAAoBuC,MAAK,SAAAnJ,GAAE,OAAIA,IAAO4I,EAAK5I,MAAK+D,QAAS,WACzE+E,EAAWF,EAAK5I,KADlB,wBAIA,wBAAQkJ,SAAUtC,EAAoBuC,MAAK,SAAAnJ,GAAE,OAAIA,IAAO4I,EAAK5I,MAAK+D,QAAS,WACzE8E,EAASD,EAAK5I,KADhB,2BAMlB,iCACQ,iCACI,8BAAM4I,EAAK3I,OACX,8BAAM2I,EAAKnG,YAEf,iCACI,8BAAM,0BACN,8BAAM,iCC3BjB2G,GAAQ,SAAC,GASuB,IARnBhI,EAQkB,EARlBA,SACAqF,EAOkB,EAPlBA,gBACAnF,EAMkB,EANlBA,SACAoF,EAKkB,EALlBA,aACAa,EAIkB,EAJlBA,cACAX,EAGkB,EAHlBA,oBACAiC,EAEkB,EAFlBA,SACAC,EACkB,EADlBA,WAGtB,OAAO,gCACH,cAAC,GAAD,CAAWxB,gBAAiBb,EACjBnF,SAAUA,EACVoF,aAAcA,EACda,cAAeA,EACfC,YAAa,KAGvBpG,EAASkF,KAAI,SAAAC,GAAC,OAAI,cAAC,GAAD,CACMqC,KAAMrC,EACNK,oBAAqBA,EACrBiC,SAAUA,EACVC,WAAYA,GAJPvC,EAAEvG,W,4BC5B3BoB,GAAWiI,cAHC,SAAChJ,GACtB,OAAOA,EAAMiJ,UAAU9C,SAGvB,SAACA,GACG,OAAOA,EAAM6B,QAAO,SAAAkB,GAAC,OAAIA,QAGpBC,GAAc,SAACnJ,GACxB,OAAOA,EAAMiJ,UAAUhI,UAGdmI,GAAqB,SAACpJ,GAC/B,OAAOA,EAAMiJ,UAAU7C,iBAGdiD,GAAkB,SAACrJ,GAC5B,OAAOA,EAAMiJ,UAAU5C,cAGdiD,GAAgB,SAACtJ,GAC1B,OAAOA,EAAMiJ,UAAU3C,YAGdiD,GAAyB,SAACvJ,GACnC,OAAOA,EAAMiJ,UAAU1C,qBCKrBiD,G,4MAMFtC,cAAgB,SAACuC,GACb,EAAKzG,MAAM0G,eAAeD,EAAY,EAAKzG,MAAM/B,W,uDALrD,WACImD,KAAKpB,MAAM0G,eAAetF,KAAKpB,MAAMqD,aAAcjC,KAAKpB,MAAM/B,Y,oBAOlE,WACI,OAAO,qCACFmD,KAAKpB,MAAMsD,WAAa,cAACqD,GAAA,EAAD,IAAe,KACxC,cAAC,GAAD,aAAOzC,cAAe9C,KAAK8C,eAAmB9C,KAAKpB,e,GAblCqB,IAAMC,WA8BpBsF,sBACXrF,aAZoB,SAACvE,GACrB,MAAO,CACHe,SAAUA,GAASf,GACnBiB,SAAUkI,GAAYnJ,GACtBoG,gBAAiBgD,GAAmBpJ,GACpCqG,aAAcgD,GAAgBrJ,GAC9BsG,WAAYgD,GAActJ,GAC1BuG,oBAAqBgD,GAAuBvJ,MAKvB,CACjB0J,eL2CkB,SAACzB,EAAchH,GAAf,8CAAoC,WAAO+C,GAAP,eAAAC,EAAA,6DAC9DD,EAAS2C,GAAmB,IAC5B3C,EApBO,CAAC9D,KAAM,yBAA0BmG,aAoBd4B,IAFoC,SAI3CnH,IAASC,SAASkH,EAAMhH,GAJmB,OAIxDI,EAJwD,OAK9D2C,EAAS2C,GAAmB,IAC5B3C,EA7BO,CAAC9D,KAAM,iBAAkBiG,MA6Bb9E,EAAKwE,QACxB7B,EApBO,CAAC9D,KAAM,8BAA+B2J,WAoBfxI,EAAKwI,aAP2B,2CAApC,uDK1ClBrB,SL8DY,SAACjH,GAAD,8CAAoB,WAAOyC,GAAP,SAAAC,EAAA,sEAClC4C,EAAmB7C,EAAUzC,EAAQT,IAASY,WAAWoI,KAAKhJ,KAAW0F,GADvC,2CAApB,uDK7DZiC,WLiEc,SAAClH,GAAD,8CAAoB,WAAOyC,GAAP,SAAAC,EAAA,sEACpC4C,EAAmB7C,EAAUzC,EAAQT,IAASQ,aAAawI,KAAKhJ,KAAW4F,GADvC,2CAApB,yDKrEXkD,CAMRJ,ICnED/J,GAAe,CACjBsK,aAAa,GCcXC,GAAmB3F,IAAM4F,MAAK,kBAAM,iCACpCC,GAAmB7F,IAAM4F,MAAK,kBAAM,iCAWpCE,G,uKAEF,WACI/F,KAAKpB,MAAMoH,oB,oBAGf,WACI,OAAKhG,KAAKpB,MAAM+G,YAKZ,sBAAKnH,UAAW,cAAhB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAW,sBAAhB,SACI,cAAC,IAAMyH,SAAP,CAAgBC,SAAU,6CAA1B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,WAAWC,QAAS,cAACN,GAAD,IAAhC,SACI,cAAC,IAAD,CAAOK,KAAK,UAAUC,QAAS,cAACN,GAAD,QAEnC,cAAC,IAAD,CAAOK,KAAK,WAAWC,QAAS,cAACR,GAAD,MAChC,cAAC,IAAD,CAAOO,KAAK,SAASC,QAAS,cAACC,GAAD,MAC9B,cAAC,IAAD,CAAOF,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAM5K,KAAM,WACzC,cAAC,IAAD,CAAO2K,KAAK,SAASC,QAAS,cAAC,EAAD,CAAO5K,KAAM,YAC3C,cAAC,IAAD,CAAO2K,KAAK,WAAWC,QAAS,cAAC,EAAD,CAAS5K,KAAM,cAC/C,cAAC,IAAD,CAAO2K,KAAK,SAASC,QAAS,cAAC,EAAD,gBAlBvC,cAACb,GAAA,EAAD,Q,GARDtF,IAAMC,WAwCTsF,sBACXrF,aALoB,SAACvE,GAAD,MAA0B,CAC9C+J,YAAa/J,EAAM0K,IAAIX,eAIE,CAACK,gBD5CC,yDAAgB,WAAOpG,GAAP,SAAAC,EAAA,sEACrCD,EAASD,KAD4B,OAE3CC,EALO,CAAC9D,KAAM,4BAG6B,2CAAhB,wDC4C3BqE,CAA4C4F,K,iDC5D1CQ,GAAcC,2BAAgB,CAChCC,YAAaC,KACbC,YAAahL,KACbkJ,UR0BwB,WAAmG,IAAlGjJ,EAAiG,uDAAnEP,EAAcQ,EAAqD,uCAC1H,OAAQA,EAAOC,MACX,IAAK,uBACD,OAAO,2BACAF,GADP,IAEImG,MAAOP,EAAoB5F,EAAMmG,MAAOlG,EAAON,GAAI,KAAM,CAACiJ,UAAU,MAE5E,IAAK,yBACD,OAAO,2BACA5I,GADP,IAEImG,MAAOP,EAAoB5F,EAAMmG,MAAOlG,EAAON,GAAI,KAAM,CAACiJ,UAAU,MAE5E,IAAK,iBACD,OAAO,2BAAI5I,GAAX,IAAkBmG,MAAM,YAAKlG,EAAOkG,SACxC,IAAK,yBACD,OAAO,2BAAInG,GAAX,IAAkBqG,aAAcpG,EAAOoG,eAC3C,IAAK,8BACD,OAAO,2BAAIrG,GAAX,IAAkBoG,gBAAiBnG,EAAO4J,aAC9C,IAAK,2BACD,OAAO,2BAAI7J,GAAX,IAAkBsG,WAAYrG,EAAOqG,aACzC,IAAK,qCACD,OAAO,2BACAtG,GADP,IACcuG,oBAAqBtG,EAAOqG,WAAP,sBACrBtG,EAAMuG,qBADe,CACMtG,EAAOsB,SACtCvB,EAAMuG,oBAAoByB,QAAO,SAAArI,GAAE,OAAIA,IAAOM,EAAOsB,YAEnE,QACI,OAAOvB,IQpDfwE,KZIuB,WAAgG,IAA/FxE,EAA8F,uDAAhEP,EAAcQ,EAAkD,uCACtH,OAAQA,EAAOC,MACX,IAAK,qBACD,OAAO,2BAAIF,GAAUC,EAAO6D,SAEhC,IAAK,mBACD,OAAO,2BAAI9D,GAAX,IAAkBoD,OAAQnD,EAAOmD,SAErC,QACI,OAAOpD,IYZf2E,KAAMqG,KACNN,IFNsB,WAAqG,IAApG1K,EAAmG,uDAAlEP,GAAcQ,EAAoD,uCAC1H,OAAQA,EAAOC,MACX,IAAK,0BACD,OAAO,2BAAIF,GAAX,IAAkB+J,aAAa,IAEnC,QACI,OAAO/J,MEKNiL,GAAQC,uBAAYP,GAAaQ,+BAAoBC,2BAAgBC,QAelFC,OAAOL,MAAQA,GC9BfM,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACI,cAAC,GAAD,UAKZS,SAASC,eAAe,U,mBCf5BrL,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,gCCD5G,QAA0B,sC,sJCInCqL,EAAc,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,SAClBC,EAAWF,EAAKG,SAAWH,EAAKhH,MAEtC,OACI,sBAAKjC,UAAS,UAAKH,IAAEwJ,YAAP,YAAsBF,EAAWtJ,IAAEoC,MAAQ,IAAzD,UACI,8BACKiH,IAEJC,GAAY,+BAAOF,EAAKhH,YAKxBqH,EAAW,SAAClJ,GACsBA,EAApCmJ,MAAoCnJ,EAA7B6I,KAA6B7I,EAAvBoJ,MADiB,IACPC,EADM,YACOrJ,EADP,0BAEpC,OAAO,cAAC4I,EAAD,2BAAiB5I,GAAjB,aAAyB,oDAAcA,EAAMmJ,OAAWE,QAGtDlH,EAAQ,SAACnC,GAC4BA,EAAvCmJ,MAAuCnJ,EAAhC6I,KAAgC7I,EAA1B8I,SADc,IACDO,EADA,YACarJ,EADb,6BAEjC,OAAO,cAAC4I,EAAD,2BAAiB5I,GAAjB,aAAyB,iDAAWA,EAAMmJ,OAAWE,S,2ECxBjD,MAA0B,oC,OCG5B1C,EAAY,WACrB,OACI,mCACI,qBAAKpG,IAAK+I,EAAS9I,IAAK,Y,gCCLpC,oEAAO,IAAMyB,EAAW,SAACsH,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAE7B,OAAO,SAACF,GACJ,GAAIA,GAASA,EAAM/G,OAASiH,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,mBCR/CnM,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,6PC+BzDd,EAAe,CACjBiN,UAAW,CACP,CAAC/M,GAAI,EAAGG,QAAS,mBAAoB6M,WAAY,IACjD,CAAChN,GAAI,EAAGG,QAAS,iBAAkB6M,WAAY,KAEnDC,QAAS,KACTxK,OAAQ,IAQC0I,EAAiB,WAA2G,IAA1G9K,EAAyG,uDAAxEP,EAAcQ,EAA0D,uCACpI,OAAQA,EAAOC,MACX,IAAK,mBACD,IAAMC,EAAOF,EAAO4M,YACpB,OAAO,2BAAI7M,GAAX,IAAkB0M,UAAU,GAAD,mBAAM1M,EAAM0M,WAAZ,CAAuB,CAAC/M,GAAI,EAAGG,QAASK,EAAMwM,WAAY,OAEzF,IAAK,2BACD,OAAO,2BAAI3M,GAAX,IAAkB4M,QAAS3M,EAAO2M,UAEtC,IAAK,qBACD,OAAO,2BAAI5M,GAAX,IAAkBoC,OAAQnC,EAAOmC,SAErC,IAAK,sBACD,OAAO,2BAAIpC,GAAX,IAAkB0M,UAAW1M,EAAM0M,UAAU1E,QAAO,SAAArG,GAAI,OAAIA,EAAKhC,KAAOM,EAAON,QAEnF,QACI,OAAOK,IAON8M,EAAY,SAACD,GACtB,MAAO,CAAC3M,KAAM,mBAAoB2M,gBAOzBE,EAAc,SAAC3K,GACxB,MAAO,CAAClC,KAAM,qBAAsBkC,WAO3B4K,EAAmB,SAACzL,GAAD,8CAAoB,WAAOyC,GAAP,eAAAC,EAAA,sEAC9BjC,IAAWC,WAAWV,GADQ,OAC1C2C,EAD0C,OAEhDF,EAbO,CAAC9D,KAAM,2BAA4B0M,QAahB1I,EAAI7C,OAFkB,2CAApB,uDAKnB4L,EAAc,SAAC7K,GAAD,8CAAoB,WAAO4B,GAAP,eAAAC,EAAA,sEACzBjC,IAAWE,UAAUE,GADI,OACrC8B,EADqC,OAE3CF,EAAS+I,EAAY7I,EAAI7C,OAFkB,2CAApB,uDAKd6L,EAAiB,SAAC9K,GAAD,8CAAoB,WAAO4B,GAAP,SAAAC,EAAA,sEAC5BjC,IAAWG,aAAaC,GADI,OAGlB,IAHkB,OAGtCf,KAAKI,YACTuC,EAAS+I,EAAY3K,IAJqB,2CAApB,yD","file":"static/js/main.71b59eb8.chunk.js","sourcesContent":["export type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Egor'},\r\n        {id: 2, name: 'Marina'},\r\n        {id: 3, name: 'Veronika'},\r\n        {id: 4, name: 'Andrey'},\r\n        {id: 5, name: 'Igor'},\r\n        {id: 6, name: 'Artem'},\r\n    ] as Array<DialogsType>,\r\n    massagesData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type InitialStateDialogsType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateDialogsType = initialState, action: ACDialogsReducerType):InitialStateDialogsType => {\r\n    switch (action.type) {\r\n        case 'dialogs/ADD-MESSAGE': {\r\n            const body = action.newMessageBody\r\n            return {...state, massagesData: [...state.massagesData, {id:6, message:body}] }\r\n         }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ACDialogsReducerType = AddMessageACType\r\n\r\ntype AddMessageACType = ReturnType<typeof AddMessageAC>\r\nexport const AddMessageAC = (newMessageBody: string) => {\r\n    return {type: 'dialogs/ADD-MESSAGE', newMessageBody} as const\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__Ejmn6\",\"numberPage\":\"Paginator_numberPage__3jr8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2PuO7\",\"selectedPage\":\"Users_selectedPage__2sDSH\",\"numberPage\":\"Users_numberPage__1I8Y3\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '066ae431-6115-49fc-b06c-595e5096a36d'\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentNumberPages: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentNumberPages}&count=${pageSize}`)\r\n            .then(response => {\r\n                    return response.data\r\n                } //вернул promise в котором data\r\n            )\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode\r\n            })\r\n    },\r\n    followUser(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<BaseProfileType<AuthMeType>>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<BaseProfileType<{ userId: number }>>('/auth/login', data)\r\n    },\r\n    logout() {\r\n        return instance.delete<BaseProfileType>('/auth/login')\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<BaseProfileType>(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n    captcha?: string\r\n}\r\n\r\n\r\ntype AuthMeType = {\r\n    email: string\r\n    id: number\r\n    login: string\r\n}\r\ntype BaseProfileType<T = {}> = {\r\n    data: T\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__cUqkZ\",\"activeLink\":\"Navbar_activeLink__3dZSJ\",\"item\":\"Navbar_item__3QqFY\"};","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    const setActive = ({isActive}: { isActive: boolean }) => isActive ? s.activeLink : s.item\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/profile'}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/dialogs'}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/users'}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/news'}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/music'}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink className={setActive} to={'/setting'}>Setting</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}","import React from 'react';\r\n\r\ntype MusicPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const Music = (props: MusicPropsType) => {\r\n    return (\r\n        <div>{props.name}</div>\r\n    )\r\n}","import React from 'react';\r\n\r\ntype NewsPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const News = (props: NewsPropsType) => {\r\n    return (\r\n        <div>{props.name}</div>\r\n    )\r\n}","import React from 'react';\r\n\r\ntype SettingPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const Setting = (props: SettingPropsType) => {\r\n    return (\r\n        <div>{props.name}</div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport userPhoto from '../../assets/images/userIcon.png';\r\n\r\ntype HeaderPropsType = {\r\n    login: null | string\r\n    isAuth: boolean\r\n    logoutTC: Function\r\n}\r\n\r\nexport const Header = ({login, isAuth, logoutTC,}: HeaderPropsType) => {\r\n\r\n    const onClickHandler = () => {\r\n        logoutTC()\r\n    }\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://www.logodesign.net/logo/abstract-cuboid-building-4519ld.png\" alt=\"logo\"/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth\r\n                    ? <div>{login} - <button onClick={onClickHandler}>Log out</button></div>\r\n                    : <NavLink to={'/login'}><img src={userPhoto} alt=\"123\"/>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {authAPI, LoginParamsType} from '../API/api';\r\nimport {Dispatch} from 'redux';\r\nimport {AppThunk} from './reduxStore';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n}\r\n\r\nexport type initialStateAuthType = {\r\n    id: null | number\r\n    login: null | string\r\n    email: null | string\r\n    isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: initialStateAuthType = initialState, action: AuthReducerType): initialStateAuthType => {\r\n    switch (action.type) {\r\n        case 'auth/SET-USER-DATA': {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case 'auth/SET-IS-AUTH': {\r\n            return {...state, isAuth: action.isAuth}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type AuthReducerType = SetAuthUserDataACType | SetIsAuth\r\n\r\ntype SetAuthUserDataACType = ReturnType<typeof setAuthUserDataAC>\r\nexport const setAuthUserDataAC = (id: number, login: string, email: string, isAuth: boolean) => {\r\n    return {type: 'auth/SET-USER-DATA', payload: {id, login, email, isAuth}} as const\r\n}\r\n\r\ntype SetIsAuth = ReturnType<typeof setIsAuthAC>\r\nexport const setIsAuthAC = (isAuth: boolean) => {\r\n    return {type: 'auth/SET-IS-AUTH', isAuth} as const\r\n}\r\n\r\nexport const getAuthMeTC = () => async (dispatch: Dispatch) => {\r\n    const res = await authAPI.authMe()\r\n\r\n    if (res.resultCode === 0) {\r\n        let {id, login, email} = res.data\r\n        dispatch(setAuthUserDataAC(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const loginTC = (data: LoginParamsType): AppThunk => async (dispatch) => {\r\n    const res = await authAPI.login(data)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        await dispatch(getAuthMeTC())\r\n    } else {\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Email or login is wrong'\r\n        let action: any = stopSubmit('login', {_error: message})\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): AppThunk => async (dispatch) => {\r\n    const res = await authAPI.logout()\r\n\r\n    if (res.data.resultCode === 0) {\r\n        await dispatch(getAuthMeTC())\r\n        dispatch(setAuthUserDataAC(null!, null!, null!, false))\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Header} from './Header';\r\nimport {logoutTC} from '../../Redux/authReducer';\r\nimport {AppStateType} from '../../Redux/reduxStore';\r\n\r\ntype HeaderContainerType = MapStateToPropsType & MapDispatchToProps\r\n\r\ntype MapStateToPropsType = {\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToProps = {\r\n    logoutTC: Function\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, AppStateType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header  {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutTC})\r\n(HeaderContainer)","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {loginTC} from '../../Redux/authReducer';\r\nimport {LoginParamsType} from '../../API/api';\r\nimport {AppStateType} from '../../Redux/reduxStore';\r\nimport {Navigate} from 'react-router-dom';\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginParamsType>> = (props) => {\r\n    const {handleSubmit, error} = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><Field validate={[required]} name={'email'} component={Input} placeholder={'Email'}/></div>\r\n            <div><Field validate={[required]} name={'password'} component={Input} placeholder={'Password'}\r\n                        type={'password'}/></div>\r\n            <div><Field name={'rememberMe'} component={Input} type={'checkbox'}/>remember me</div>\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button type={'submit'}>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginParamsType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({loginTC,isAuth,}: LoginContainerType) => {\r\n\r\n    const onSubmit = (formData: LoginParamsType) => {\r\n        loginTC(formData)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginTC})(Login)\r\n\r\ntype LoginContainerType = MapDispatchToProps & MapStateToProps\r\ntype MapStateToProps = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToProps = {\r\n    loginTC: Function\r\n}","export const updateObjectInArray = (items: any[], itemId: string | number, obgPropName: string, newObjProps: Object) => {\r\n   return  items.map(m => m[obgPropName] === itemId ? {...m, ...newObjProps} : m)\r\n}\r\n\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {usersAPI} from '../API/api';\r\nimport {updateObjectInArray} from '../utils/objectHelpers';\r\n\r\ntype PhotosType = {\r\n    small: string | undefined\r\n    large: string | undefined\r\n}\r\ntype LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\n\r\nexport type UserType = {\r\n    photos: PhotosType\r\n    name: string;\r\n    id: number\r\n    followed: boolean\r\n    location: LocationType\r\n    status: string\r\n}\r\n\r\n\r\nexport type initialStateUserType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPages: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state: initialStateUserType = initialState, action: ACUsersReducerType): initialStateUserType => {\r\n    switch (action.type) {\r\n        case 'users/FOLLOW-SUCCESS':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, 'id', {followed: true})\r\n            }\r\n        case 'users/UNFOLLOW-SUCCESS':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.id, 'id', {followed: false})\r\n            }\r\n        case 'users/SET-USER':\r\n            return {...state, users: [...action.users]}\r\n        case 'users/SET-CURRENT-PAGE':\r\n            return {...state, currentPages: action.currentPages}\r\n        case 'users/SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case 'users/TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'users/TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ACUsersReducerType = FollowSuccessACType | UnfollowSuccessACType | SetUserACType\r\n    | SetCurrentPageACType | SetTotalUsersCountACType | ToggleIsFetchingACType\r\n    | ToggleIsFollowingProgressACType\r\n\r\ntype FollowSuccessACType = ReturnType<typeof followSuccessAC>\r\nexport const followSuccessAC = (userID: number) => {\r\n    return {type: 'users/FOLLOW-SUCCESS', id: userID} as const\r\n}\r\n\r\ntype UnfollowSuccessACType = ReturnType<typeof unfollowSuccessAC>\r\nexport const unfollowSuccessAC = (userID: number) => {\r\n    return {type: 'users/UNFOLLOW-SUCCESS', id: userID} as const\r\n}\r\n\r\ntype SetUserACType = ReturnType<typeof setUserAC>\r\nexport const setUserAC = (users: Array<UserType>) => {\r\n    return {type: 'users/SET-USER', users: users} as const\r\n}\r\n\r\ntype SetCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\nexport const setCurrentPageAC = (currentPages: number) => {\r\n    return {type: 'users/SET-CURRENT-PAGE', currentPages} as const\r\n}\r\n\r\ntype SetTotalUsersCountACType = ReturnType<typeof setTotalUsersCountAC>\r\nexport const setTotalUsersCountAC = (totalCount: number) => {\r\n    return {type: 'users/SET-TOTAL-USERS-COUNT', totalCount} as const\r\n}\r\n\r\ntype ToggleIsFetchingACType = ReturnType<typeof toggleIsFetchingAC>\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => {\r\n    return {type: 'users/TOGGLE-IS-FETCHING', isFetching} as const\r\n}\r\n\r\ntype ToggleIsFollowingProgressACType = ReturnType<typeof toggleIsFollowingProgressAC>\r\nexport const toggleIsFollowingProgressAC = (isFetching: boolean, userId: number) => {\r\n    return {type: 'users/TOGGLE-IS-FOLLOWING-PROGRESS', isFetching, userId} as const\r\n}\r\n\r\nexport const requestUsersTC = (page: number, pageSize: number) => async (dispatch: Dispatch<ACUsersReducerType>) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n    dispatch(setCurrentPageAC(page))\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetchingAC(false))\r\n    dispatch(setUserAC(data.items))\r\n    dispatch(setTotalUsersCountAC(data.totalCount))\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: Function, actionCreator: Function) => {\r\n    dispatch(toggleIsFollowingProgressAC(true, userId))\r\n\r\n    const resultCode = await apiMethod(userId)\r\n    if (resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgressAC(false, userId))\r\n}\r\n\r\nexport const followTC = (userId: number) => async (dispatch: Dispatch<ACUsersReducerType>) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccessAC)\r\n}\r\n\r\nexport const unfollowTC = (userId: number) => async (dispatch: Dispatch<ACUsersReducerType>) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccessAC)\r\n\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPages: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator = ({\r\n                              totalItemsCount,\r\n                              pageSize,\r\n                              currentPages,\r\n                              onPageChanged,\r\n                              portionSize,\r\n                          }: PaginatorPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div>\r\n        {\r\n            portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>{`<`}</button>\r\n        }\r\n\r\n        {pages\r\n            .filter((page) => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n            .map((page, index) => {\r\n                return <span style={{cursor: 'pointer'}}\r\n                             key={index}\r\n                             onClick={() => {\r\n                                 onPageChanged(page)\r\n                             }}\r\n                             className={currentPages === page ? s.selectedPage : ''}> {page}\r\n                    </span>\r\n            })}\r\n\r\n        {\r\n            portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>{`>`}</button>\r\n        }\r\n\r\n    </div>;\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport userPhoto from './../../assets/images/userIcon.png'\r\nimport {UserType} from '../../Redux/usersReducer';\r\n\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}\r\n\r\nexport const User = ({user, followingInProgress, followTC, unfollowTC,}: UserPropsType) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                         <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                                 className={s.userPhoto} alt={'123'}/>\r\n                         </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollowTC(user.id)\r\n                            }}>Unfollowed</button>\r\n\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                followTC(user.id)\r\n                            }}>Followed</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'user.location.country'}</div>\r\n                        <div>{'user.location.city'}</div>\r\n                    </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {UserType} from '../../Redux/usersReducer';\r\nimport {Paginator} from '../common/Paginator/Paginator';\r\nimport {User} from './User';\r\n\r\ntype UsersPropsType = {\r\n    getUsers: Array<UserType>\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPages: number\r\n    followingInProgress: number[]\r\n    onPageChanged: (pageNumber: number) => void\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}\r\n\r\nexport const Users = ({\r\n                          getUsers,\r\n                          totalUsersCount,\r\n                          pageSize,\r\n                          currentPages,\r\n                          onPageChanged,\r\n                          followingInProgress,\r\n                          followTC,\r\n                          unfollowTC,\r\n                      }: UsersPropsType) => {\r\n\r\n    return <div>\r\n        <Paginator totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n                   currentPages={currentPages}\r\n                   onPageChanged={onPageChanged}\r\n                   portionSize={10}/>\r\n\r\n\r\n        {getUsers.map(m => <User key={m.id}\r\n                                 user={m}\r\n                                 followingInProgress={followingInProgress}\r\n                                 followTC={followTC}\r\n                                 unfollowTC={unfollowTC}\r\n        />)}\r\n    </div>\r\n};\r\n\r\n","import {createSelector} from 'reselect';\r\nimport {AppStateType} from './reduxStore';\r\n\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => u)\r\n    })\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPages = (state: AppStateType) => {\r\n    return state.usersPage.currentPages\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/reduxStore';\r\nimport {followTC, requestUsersTC, unfollowTC, UserType,} from '../../Redux/usersReducer';\r\nimport React from 'react';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPages,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from '../../Redux/userSelector';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    getUsers: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPages: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    requestUsersTC: (currentNumberPages: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}\r\n\r\nexport type UsersType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass UsersComponent extends React.Component<UsersType, AppStateType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsersTC(this.props.currentPages, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.requestUsersTC(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChanged={this.onPageChanged} {...this.props}/>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        getUsers: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPages: getCurrentPages(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n            requestUsersTC,\r\n            followTC,\r\n            unfollowTC,\r\n        }\r\n    ))(UsersComponent)","import {AppThunk} from './reduxStore';\r\nimport {getAuthMeTC} from './authReducer';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type initialStateProfileType = {\r\n    initialized: boolean\r\n}\r\n\r\nexport const appReducer = (state: initialStateProfileType = initialState, action: AppReducerType): initialStateProfileType => {\r\n    switch (action.type) {\r\n        case 'app/INITIALIZED-SUCCESS': {\r\n            return {...state, initialized: true}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type AppReducerType = InitializedSuccessACType\r\n\r\ntype InitializedSuccessACType = ReturnType<typeof initializedSuccessAC>\r\nexport const initializedSuccessAC = () => {\r\n    return {type: 'app/INITIALIZED-SUCCESS'} as const\r\n}\r\n\r\nexport const initializeAppTC = (): AppThunk => async (dispatch) => {\r\n    await dispatch(getAuthMeTC())\r\n    dispatch(initializedSuccessAC())\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Navbar} from './Component/Navbar/Navbar';\nimport {Route, Routes,} from 'react-router';\nimport {Music} from './Component/Music/Music';\nimport {News} from './Component/News/News';\nimport {Setting} from './Component/Setting/Setting';\n//import ProfileContainer from './Component/Profile/ProfileInfo/ProfileContainer';\nimport HeaderContainer from './Component/Header/HeaderContainer';\nimport Login from './Component/Login/Login';\n//import DialogsContainer from './Component/Dialogs/DialogsContainer';\nimport UsersContainer from './Component/Users/UsersContainer';\nimport {AppStateType} from './Redux/reduxStore';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeAppTC} from './Redux/appReducer';\nimport {Preloader} from './Component/common/Preloader/Preloader';\n\nconst DialogsContainer = React.lazy(() => import('./Component/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Component/Profile/ProfileInfo/ProfileContainer'));\n\n\ntype AppConnectType = MapDispatchToProps & MapStateToProps\ntype MapStateToProps = {\n    initialized: boolean\n}\ntype MapDispatchToProps = {\n    initializeAppTC: Function\n}\n\nclass App extends React.Component <AppConnectType, AppStateType> {\n\n    componentDidMount() {\n        this.props.initializeAppTC()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={'app-wrapper'}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <React.Suspense fallback={<div>Loading...</div>}>\n                        <Routes>\n                            <Route path=\"/profile\" element={<ProfileContainer/>}>\n                                <Route path=\":userId\" element={<ProfileContainer/>}/>\n                            </Route>\n                            <Route path=\"/dialogs\" element={<DialogsContainer/>}/>\n                            <Route path=\"/users\" element={<UsersContainer/>}/>\n                            <Route path=\"/news\" element={<News name={'News'}/>}/>\n                            <Route path=\"/music\" element={<Music name={'Music'}/>}/>\n                            <Route path=\"/setting\" element={<Setting name={'Setting'}/>}/>\n                            <Route path=\"/login\" element={<Login/>}/>\n                        </Routes>\n                    </React.Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    connect(mapStateToProps, {initializeAppTC})(App)\n)\n\n\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {ACDialogsReducerType, dialogsReducer} from './dialogsReducer';\r\nimport {ACProfileReducerType, profileReducer} from './profileReducer';\r\nimport {ACUsersReducerType, usersReducer,} from './usersReducer';\r\nimport {authReducer, AuthReducerType} from './authReducer';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer, AppReducerType} from './appReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\n//export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppActionType =\r\n    | ACProfileReducerType\r\n    | ACDialogsReducerType\r\n    | ACUsersReducerType\r\n    | AuthReducerType\r\n    | AppReducerType\r\n\r\nexport type AppThunk<ReturnType = void> =\r\n    ThunkAction<ReturnType, AppStateType, unknown, AppActionType>\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './Redux/reduxStore';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n)\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1q-Xj\",\"error\":\"FormsControls_error__1xdco\",\"formSummaryError\":\"FormsControls_formSummaryError__1SBOo\"};","export default __webpack_public_path__ + \"static/media/userIcon.01df14ab.png\";","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\n\r\nconst FormControl = ({meta, children,}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props} ><textarea {...props.input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props} ><input {...props.input} {...restProps} /></FormControl>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Spinner.ac5d5761.svg\";","import React from 'react';\r\nimport preload from '../../../assets/images/Spinner.svg';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <>\r\n            <img src={preload} alt={'pic'}/>\r\n        </>\r\n    );\r\n};\r\n","\r\nexport const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n\r\n    return (value: string) => {\r\n        if (value && value.length > maxLength) return `Max length is ${maxLength} symbol`\r\n        return undefined\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__QlxvU\",\"loginBlock\":\"Header_loginBlock__3MxXM\"};","import {Dispatch} from 'redux';\r\nimport {profileAPI} from '../API/api';\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    'aboutMe': string\r\n    'contacts': {\r\n        'facebook': string,\r\n        'website': string,\r\n        'vk': string,\r\n        'twitter': string,\r\n        'instagram': string,\r\n        'youtube': string,\r\n        'github': string,\r\n        'mainLink': string\r\n    }\r\n    'lookingForAJob': string\r\n    'lookingForAJobDescription': string\r\n    'fullName': string\r\n    'userId': number\r\n    'photos': {\r\n        'small': string\r\n        'large': string\r\n    }\r\n} | null\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 15},\r\n        {id: 2, message: 'My first post!', likesCount: 20},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\nexport type initialStateProfileType = {\r\n    postsData: Array<PostType>\r\n    profile: null | ProfileType\r\n    status: string\r\n}\r\n\r\nexport const profileReducer = (state: initialStateProfileType = initialState, action: ACProfileReducerType): initialStateProfileType => {\r\n    switch (action.type) {\r\n        case 'profile/ADD-POST': {\r\n            const body = action.newPostBody\r\n            return {...state, postsData: [...state.postsData, {id: 5, message: body, likesCount: 0}]}\r\n        }\r\n        case 'profile/SET-USER-PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'profile/SET-STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'profile/DELETE-POST': {\r\n            return {...state, postsData: state.postsData.filter(post => post.id !== action.id)}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ACProfileReducerType = AddPostACType | SetUserProfileACType | SetStatusACType | DeletePostACType\r\n\r\n\r\ntype AddPostACType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = (newPostBody: string) => {\r\n    return {type: 'profile/ADD-POST', newPostBody} as const\r\n}\r\ntype SetUserProfileACType = ReturnType<typeof setUserProfileAC>\r\nexport const setUserProfileAC = (profile: ProfileType) => {\r\n    return {type: 'profile/SET-USER-PROFILE', profile} as const\r\n}\r\ntype SetStatusACType = ReturnType<typeof setStatusAC>\r\nexport const setStatusAC = (status: string) => {\r\n    return {type: 'profile/SET-STATUS', status} as const\r\n}\r\ntype DeletePostACType = ReturnType<typeof deletePostAC>\r\nexport const deletePostAC = (id: number) => {\r\n    return {type: 'profile/DELETE-POST', id} as const\r\n}\r\n\r\nexport const getUserProfileTC = (userId: string) => async (dispatch: Dispatch<ACProfileReducerType>) => {\r\n    const res = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileAC(res.data))\r\n}\r\n\r\nexport const getStatusTC = (status: string) => async (dispatch: Dispatch<ACProfileReducerType>) => {\r\n    const res = await profileAPI.getStatus(status)\r\n    dispatch(setStatusAC(res.data))\r\n}\r\n\r\nexport const updateStatusTC = (status: string) => async (dispatch: Dispatch<ACProfileReducerType>) => {\r\n    const res = await profileAPI.updateStatus(status)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatusAC(status))\r\n    }\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}