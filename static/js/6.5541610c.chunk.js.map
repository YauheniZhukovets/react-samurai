{"version":3,"sources":["component/Common/FormsControls/FormsControls.tsx","component/Common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","component/Login/Login.module.scss","component/Login/Login.tsx"],"names":["FormControl","meta","children","hasError","touched","error","className","s","formControl","Textarea","props","input","child","restProps","Input","module","exports","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","captcha","formContainer","onSubmit","fieldWrapper","validate","name","component","placeholder","type","checkbox","style","formSummaryError","src","alt","connect","state","isAuth","auth","captchaUrl","loginTC","to","login","loginTextContainer","loginText","href","target","rel","formData"],"mappings":"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","file":"static/js/6.5541610c.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nconst FormControl = ({meta, children,}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props} ><textarea {...props.input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props} ><input {...props.input} {...restProps} /></FormControl>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3RLDu\",\"error\":\"FormsControls_error__2bFT9\",\"formSummaryError\":\"FormsControls_formSummaryError__3yqtq\"};","\r\nexport const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n\r\n    return (value: string) => {\r\n        if (value && value.length > maxLength) return `Max length is ${maxLength} symbol`\r\n        return undefined\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3w5Fn\",\"loginTextContainer\":\"Login_loginTextContainer__1JcNA\",\"loginText\":\"Login_loginText__UYyWR\",\"formContainer\":\"Login_formContainer__fL6r1\",\"fieldWrapper\":\"Login_fieldWrapper__2jDlX\",\"input\":\"Login_input__1hldA\",\"checkbox\":\"Login_checkbox__tA9eT\"};","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Input} from '../Common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {loginTC} from '../../redux/authReducer';\r\nimport {LoginParamsType} from '../../API/api';\r\nimport {AppStateType} from '../../redux/reduxStore';\r\nimport {Navigate} from 'react-router-dom';\r\nimport style from '../Common/FormsControls/FormsControls.module.css'\r\nimport s from './Login.module.scss'\r\nimport SuperButton from '../Common/SuperButton/SuperButton';\r\n\r\n\r\ntype LoginFormType = {\r\n    captcha: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginParamsType, LoginFormType> & LoginFormType> = (props) => {\r\n    const {handleSubmit, error, captcha} = props\r\n\r\n    return (\r\n        <form className={s.formContainer} onSubmit={handleSubmit}>\r\n            <div className={s.fieldWrapper}>\r\n                <Field className={s.input}\r\n                       validate={[required]}\r\n                       name={'email'}\r\n                       component={Input}\r\n                       placeholder={'Email'}/>\r\n            </div>\r\n            <div className={s.fieldWrapper}>\r\n                <Field className={s.input}\r\n                       validate={[required]}\r\n                       name={'password'}\r\n                       component={Input}\r\n                       placeholder={'Password'}\r\n                       type={'password'}/>\r\n            </div>\r\n            <div className={s.fieldWrapper}>\r\n                <Field className={s.checkbox}\r\n                       name={'rememberMe'}\r\n                       component={Input}\r\n                       type={'checkbox'}/>\r\n                <span>remember me </span>\r\n            </div>\r\n            <div>\r\n                {error && <div className={style.formSummaryError}>{error}</div>}\r\n            </div>\r\n            <div>\r\n                {captcha && <img src={captcha} alt=\"captcha\"/>}\r\n                {captcha &&\r\n                    <div className={s.fieldWrapper}>\r\n                        <Field className={s.input}\r\n                               validate={[required]}\r\n                               name={'captcha'}\r\n                               component={Input}\r\n                               placeholder={'Symbols from image'}/>\r\n                    </div>}\r\n            </div>\r\n            <div className={s.fieldWrapper}>\r\n                <SuperButton type={'submit'}>Login</SuperButton>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginParamsType, LoginFormType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({loginTC, isAuth, captcha}: LoginContainerType) => {\r\n\r\n    const onSubmit = (formData: LoginParamsType) => {\r\n        loginTC(formData)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n    return <div className={s.login}>\r\n        <div className={s.loginTextContainer}>\r\n            <p className={s.loginText}>To log in get registered\r\n                <a href=\"https://social-network.samuraijs.com/\" target=\"_blank\" rel=\"noreferrer\"> here</a>\r\n            </p>\r\n            <p className={s.loginText}>Or use common test account credentials:</p>\r\n            <p className={s.loginText}><b>Email</b>: free@samuraijs.com</p>\r\n            <p className={s.loginText}><b>Password</b>: free</p>\r\n        </div>\r\n        <LoginReduxForm onSubmit={onSubmit} captcha={captcha}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captchaUrl,\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginTC})(Login)\r\n\r\ntype LoginContainerType = MapDispatchToProps & MapStateToProps\r\ntype MapStateToProps = {\r\n    isAuth: boolean\r\n    captcha: string | null\r\n}\r\ntype MapDispatchToProps = {\r\n    loginTC: Function\r\n}"],"sourceRoot":""}